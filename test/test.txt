Opportunistic Flooding in Low-Duty-Cycle Wireless Sensor Networks with Unreliable Links

ABSTRACT

Intended for network-wide dissemination of commands, configurations and code binaries, flooding has been investigated extensively in wireless networks. However, little work has yet been done on low-duty-cycle wireless sensor networks in which nodes stay asleep most of time and wake up asynchronously. In this type of network, a broadcasting packet is rarely received by multiple nodes simultaneously, a unique constraining feature that makes existing solutions unsuitable. Combined with unreliable links, flooding in low-duty-cycle networks is a new challenging issue.

    In this paper, we introduce Opportunistic Flooding, a novel design tailored for low-duty-cycle networks with unreliable wireless links and predetermined working schedules. The key idea is to make probabilistic forwarding decisions at a sender based on the delay distribution of next-hop nodes. Only opportunistically early packets are forwarded using links outside the energy optimal tree to reduce the flooding delay and redundancy in transmission. To improve performance further, we propose a forwarder selection method to alleviate the hidden terminal problem and a link-qualitybased backoff method to resolve simultaneous forwarding operations. We evaluate Opportunistic Flooding with extensive simulation and a test-bed implementation consisting of 30 MicaZ nodes. Evaluation shows our design is close to the optimal performance achievable by oracle flooding designs. Compared with improved traditional flooding, our design achieves significantly shorter flooding delay while consuming only 20% ∼ 60% of the transmission energy in various low-duty-cycle network settings.


Categories and Subject Descriptors

C.2 [Computer Communication Networks]: Network Protocols


General Terms

Performance, Design


Keywords

Wireless Sensor Networks, Flooding, Low Duty Cycle Networks


Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.

MobiCom’09, September 20–25, 2009, Beijing, China.
Copyright 2009 ACM 978-1-60558-702-8/09/09 ...$5.00.

1. INTRODUCTION

    Wireless Sensor Networks have been used for many long-term applications such as habitat monitoring [34], infrastructure protection [42] and scientific exploration [36]. After a sensor node is miniaturized into a cubic centimeter package and deployed without wired power, its available energy is severely limited. On the other hand, there is a growing need for sustainable deployment of sensor systems [2, 34, 42, 48] to reduce operational cost and ensure service continuity. To bridge the gap between limited energy supplies and application lifetimes, a sensor network has to be operated at a very-low-duty-cycle (e.g., 1% or less), in which a sensor node schedules itself to be active for only a very brief period of time and then stays dormant for a long time. In order to deliver a packet, a sender may have to wait for a certain period of time (termed sleep latency [44]) until its receiver becomes active. Sleep latency degrades the performance (e.g, delay and energy consumption) of various kinds of communication designs in low-duty-cycle networks. While pioneering projects have been proposed for lowduty-cycle unicasts [9, 23, 47], research is surprisingly inadequate for low-duty-cycle flooding, an important function for disseminating network-wide commands, alerts and configurations [11], time synchronization [24], and code binaries [13].

    Beside sleep latency, two additional features make flooding in low-duty-cycle networks a new and challenging issue. First, a flooding packet cannot be received by multiple nodes simultaneously as it is in an always-awake network. To broadcast a packet, a sender may have to transmit the same packet multiple times if its receivers do not wake up at the same time. Essentially, flooding in such a network is realized by a number of unicasts. Second, unlike wired networks, wireless communication is notoriously unreliable [46]. A transmission might be repeated if the previous transmissions are not successful because of the low link quality. The combination of low-duty-cycle operation and unreliable links makes the problem of flooding different from that found in wired networks and always-awake wireless networks.

    This work introduces Opportunistic Flooding: a flooding method specially designed for low-duty-cycle wireless sensor networks. Its main objective is to reduce redundancy in transmission while achieving fast dissemination. A straightforward solution could be to make use of a routing tree to flood a packet. Yet this type of solution has been shown [16,28] to be very fragile, since the failure of a parent node prevents all its subtree nodes from receiving flooding messages, even if the network is actually connected. Furthermore, existing tree-based solutions could be made energy efficient, only at the cost of possibly very long delays, as they only forward packets via a single route.

Our solution inherits the reliable nature of traditional flooding, allowing packets to travel along multiple paths. The key novelty of this work lies in the forwarding decision making, in which nodes forward a packet with a higher probability if the packet arrives opportunistically earlier. This is achieved by comparing the delay of individual packets with the statistic packet delay distribution (i.e., probability mass function pmf ) at next-hop nodes. Specifically, our contributions are as follows:

    (1) To the best of our knowledge, this is the first distributed flooding method designed for wireless sensor networks that considers the effect of both low-duty-cycle and unreliable wireless links.
    (2) This work is the first to propose delay-driven opportunistic forwarding. We propose a recursive and distributive method to compute the distribution of forwarding delays (pmf ) at each node along an energy-optimal tree. The resultant pmf is then used as the guideline in forwarding decision making to reduce the flooding delay opportunistically.
    (3) To alleviate the hidden terminal problems without the hefty RTS/CTS overhead, we propose a forwarder selection method that allows forwarding nodes to overhear each other with good link quality. We also propose a link-quality-based backoff method to resolve simultaneous transmission among forwarding nodes.
    (4) The rest is organized as follows: Section 2 describes the motivation behind the work. Section 3 defines the network model and assumptions. Section 4 introduces our main design, followed by its evaluation in Sections 5 and 6. Section 7 discusses the related work and Section 8 concludes the paper.

2. MOTIVATION
    To bridge the growing gap between the lifetime requirements of sensor applications [2,34,42,48] and the limited availability of energy through fixed-budget batteries or energy harvesting [22], it is critical to have an energy-efficient communication architecture. This section identifies the need for low-duty-cycle communication designs in general and the flooding design in particular.

2.1 The Need for Low-Duty-Cycle Operation
    Typically, the energy used in communication can be optimized through (i) physical-layer transmission rate scaling [37]; (ii) linklayer optimization for better connectivity, reliability, and stability [4, 30, 38, 44]; (iii) network-layer enhancement for better forwarders and routes [6, 41, 43]; and (iv) application-layer improvements for both content-agnostic and content-centric data aggregation and inference [14, 25]. Although these solutions are highly diverse, they all assume a wireless network in which nodes are ready to receive packets and focus mainly on the transmission side,
a topic of interest that has resulted in hundreds of publications.

    In contrast, wireless networks with intermittent receivers have captured little attention, despite the fact that communication energy is consumed mostly by being ready for potential incoming packets, a problem commonly referred to as idle listening. For example, the widely adopted ChipCon CC2420 radio [35] draws 19.7mA when receiving or idle listening, which is actually larger than the 17.4mA used when transmitting. More importantly, packet transmission time is usually very brief (e.g., 1.3 milliseconds to transmit a TinyOS packet using a CC2420 radio), while the duration of idle listening for reception can be orders of magnitude longer. For example, most environmental applications, such as Great Duck Island [34], Redwood Forest [36] and James Reserve [2], sample the environment at relatively low rates (on the order of minutes between samples). With a comparable current draw and a 3∼4 orders of magnitude longer duration waiting for reception, idle listening is a major energy drain that accounts for most of the energy cost in communication. To reduce the energy penalty in idle listening, a node has to run at a low-duty-cycle (e.g., 5%, 1% or less) and turn off its radio most of time.

2.2 The Need for a New Flooding Design

    The traditional flooding method as well as many advanced versions [13,17,20,26,33] have proven their performance in terms of delivery ratio, delay and energy cost in many always-awake network settings. We argue, however, that these solutions suffer severe performance degradation (in both energy and time efficiency) if directly applied to low-duty-cycle networks. In those flooding methods, a node starts broadcasting a packet (immediately or with
a certain probability) when it first receives a flooding packet from its previous-hop node. For a low-duty-cycle network in which two neighbors seldom wake up at the same time, a broadcasting packet cannot be received by many nodes simultaneously. In addition, the delivery ratio of traditional flooding methods becomes even worse when unreliable links and collisions are taken into account. To confirm this empirically, we conducted a series of simulations by decreasing the duty-cycle of a network from 100% to 1%. Fig.1 shows how performance degrades as the duty-cycle becomes lower and that even under ideal conditions (i.e., no collisions and perfect links), a network can only deliver less than 5% of packets running at a 2% duty-cycle, a clear indication that the traditional flooding method is not suitable for low-duty-cycle networks, if used directly

    One could argue that traditional flooding methods could be adapted to low-duty-cycle networks by permitting (i) multiple transmissions of the same packet based on the neighbors’ active schedules and (ii) ARQ-based retransmission to deal with unreliable links, but this still has a number of problems. First, it suffers from a high energy cost due to collisions. When a node wakes up, many of its neighbors attempt to start a transmission simultaneously. If the links are perfect, collisions can be reduced through media access control. Unfortunately, wireless links are proven to be unreliable [30,46] and collision increases when nodes cannot sense each other’s transmission. Second, even without collisions, the number of redundant transmissions is still large especially when the network density is high. Due to these limitations in traditional flooding methods, it is necessary to have a tailored design such as the one presented in the rest of this paper.

3. PRELIMINARIES

    This section defines the network model and assumptions related to our opportunistic flooding design.

3.1 Network Model

    Suppose there is a wireless sensor network of N sensor nodes. Each sensor node has two possible states: an active state and a dormant state. An active node is able to sense an event, transmit a packet or receive a packet. A dormant node turns all its function modules off except a timer to wake itself up. All nodes have their own working schedules. These schedules are shared with neighboring nodes and are normally asynchronous in order to reduce information redundancy among temporal-correlation sensing data [10, 40]. A dormant node wakes up when (i) it is scheduled to switch to the receiving state, or (ii) it has some packets to send to a neighbor that is active at that time. In short, a node can transmit a packet at any time, but can only receive a packet when it is active. Formally, the network can be denoted by a time-dependent graph G(t) = (V, E(t)) where V is the complete set of the N nodes in the network and E(t) is the set of directed edges at time t. A directed edge eij(t) belongs to E(t) if node i and j are neighbors and at time t, node j is active so that it is able to receive packets from node i.

    For sensing purposes, the working schedules of sensor nodes are normally periodic [2, 11, 34, 36]. Without loss of generality, suppose T is the working period of the whole network (e.g, T can be any common multiple of the periods of all nodes). T can be further divided into a number of time units of length τ where τ is appropriate for a round-trip transmission time. Then each node picks one or more time units as its active state. (For those active states that are long enough for two or more round-trips, consecutive time units are selected.) Suppose the active states and the dormant states are denoted as ‘1’s and ‘0’s, respectively. The ith node’s working schedule can then be represented as < wi, τ > where wi is a string of ‘1’s and ‘0’s denoting the schedule and τ is the length of each time unit. In a low-duty-cycle network, we can compress the representation of wi by keeping only the offset values of active states.

    Fig.2(a) shows the example of < 1000, 2s > and < 0110, 2s > where T is 8s and is divided into 4 time units, each of which is 2s long. As shown in the figure, a node with schedule < 1000, 2s > is active during the first 2s and dormant during the rest 6s. Using this model, the delay of a packet can be easily computed and represented by the number of time units. As shown in the example in Fig.2(b), node A tries to forward a packet to C via B. Since a node can only receive a packet when it is active (the corresponding time units in the figure are shadowed), the packet is delayed while a sender waits for its receiver to become active. If both links are perfect, the total delay of this packet from A to C is 4 time units (4τ = 8s) according to B and C’s working schedules.

